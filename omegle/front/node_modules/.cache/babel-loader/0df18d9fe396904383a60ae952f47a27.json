{"ast":null,"code":"var _jsxFileName = \"/home/paulo/Documentos/SMU29009/omegle/front/src/pages/main/index.js\";\nimport React, { Component } from 'react';\nimport { easyrtc } from 'easyrtc';\nimport './styles.css';\nexport default class Main extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      video: false\n    };\n    this.selfEasyrtcid = \"\";\n    this.channelIsActive = {};\n  }\n\n  // tracks which channels are active\n  connect() {\n    easyrtc.enableDebug(false);\n    easyrtc.enableDataChannels(true);\n    easyrtc.enableVideo(false);\n    easyrtc.enableAudio(false);\n    easyrtc.enableVideoReceive(false);\n    easyrtc.enableAudioReceive(false);\n    easyrtc.setDataChannelOpenListener(this.openListener);\n    easyrtc.setDataChannelCloseListener(this.closeListener);\n    easyrtc.connect(\"easyrtc.dataMessaging\", this.loginSuccess, this.loginFailure);\n  }\n\n  loginSuccess(easyrtcid) {\n    this.selfEasyrtcid = easyrtcid;\n  }\n\n  loginFailure(errorCode, message) {\n    easyrtc.showError(errorCode, \"failure to login\");\n  }\n\n  openListener(otherParty) {\n    this.channelIsActive[otherParty] = true;\n  }\n\n  closeListener(otherParty) {\n    this.channelIsActive[otherParty] = false;\n  }\n\n  render() {\n    const video = this.state.video;\n    return React.createElement(\"div\", {\n      className: \"main-page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }, \"Aperte em 'texto' para chat ou 'video' para conferencia\", React.createElement(\"div\", {\n      className: \"actions\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56\n      },\n      __self: this\n    }, React.createElement(\"button\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, \"Texto\"), \"\\xA0 \\xA0\", React.createElement(\"button\", {\n      disabled: video === false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }, \"Video\")));\n  }\n\n}","map":{"version":3,"sources":["/home/paulo/Documentos/SMU29009/omegle/front/src/pages/main/index.js"],"names":["React","Component","easyrtc","Main","state","video","selfEasyrtcid","channelIsActive","connect","enableDebug","enableDataChannels","enableVideo","enableAudio","enableVideoReceive","enableAudioReceive","setDataChannelOpenListener","openListener","setDataChannelCloseListener","closeListener","loginSuccess","loginFailure","easyrtcid","errorCode","message","showError","otherParty","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAAQC,OAAR,QAAsB,SAAtB;AAEA,OAAO,cAAP;AAEA,eAAe,MAAMC,IAAN,SAAmBF,SAAnB,CAA4B;AAAA;AAAA;AAAA,SACvCG,KADuC,GAC/B;AACJC,MAAAA,KAAK,EAAE;AADH,KAD+B;AAAA,SAMvCC,aANuC,GAMvB,EANuB;AAAA,SAOvCC,eAPuC,GAOrB,EAPqB;AAAA;;AAOjB;AAEtBC,EAAAA,OAAO,GAAE;AACLN,IAAAA,OAAO,CAACO,WAAR,CAAoB,KAApB;AACAP,IAAAA,OAAO,CAACQ,kBAAR,CAA2B,IAA3B;AACAR,IAAAA,OAAO,CAACS,WAAR,CAAoB,KAApB;AACAT,IAAAA,OAAO,CAACU,WAAR,CAAoB,KAApB;AACAV,IAAAA,OAAO,CAACW,kBAAR,CAA2B,KAA3B;AACAX,IAAAA,OAAO,CAACY,kBAAR,CAA2B,KAA3B;AACAZ,IAAAA,OAAO,CAACa,0BAAR,CAAmC,KAAKC,YAAxC;AACAd,IAAAA,OAAO,CAACe,2BAAR,CAAoC,KAAKC,aAAzC;AACAhB,IAAAA,OAAO,CAACM,OAAR,CAAgB,uBAAhB,EAAyC,KAAKW,YAA9C,EAA4D,KAAKC,YAAjE;AACH;;AACDD,EAAAA,YAAY,CAACE,SAAD,EAAY;AACpB,SAAKf,aAAL,GAAqBe,SAArB;AAEH;;AAGDD,EAAAA,YAAY,CAACE,SAAD,EAAYC,OAAZ,EAAqB;AAC7BrB,IAAAA,OAAO,CAACsB,SAAR,CAAkBF,SAAlB,EAA6B,kBAA7B;AACH;;AAEDN,EAAAA,YAAY,CAACS,UAAD,EAAa;AACrB,SAAKlB,eAAL,CAAqBkB,UAArB,IAAmC,IAAnC;AAEH;;AAGDP,EAAAA,aAAa,CAACO,UAAD,EAAa;AACtB,SAAKlB,eAAL,CAAqBkB,UAArB,IAAmC,KAAnC;AAEH;;AAGDC,EAAAA,MAAM,GAAE;AAAA,UACGrB,KADH,GACY,KAAKD,KADjB,CACGC,KADH;AAEJ,WACI;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kEAII;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADJ,eAII;AAAQ,MAAA,QAAQ,EAAIA,KAAK,KAAK,KAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAJJ,CAJJ,CADJ;AAcH;;AA1DsC","sourcesContent":["import React, { Component } from 'react'\n\nimport {easyrtc} from 'easyrtc'\n\nimport './styles.css'\n\nexport default class Main extends Component{\n    state = {\n        video: false,\n    }\n\n    \n    selfEasyrtcid = \"\";\n    channelIsActive = {}; // tracks which channels are active\n    \n    connect(){\n        easyrtc.enableDebug(false);\n        easyrtc.enableDataChannels(true);\n        easyrtc.enableVideo(false);\n        easyrtc.enableAudio(false);\n        easyrtc.enableVideoReceive(false);\n        easyrtc.enableAudioReceive(false);\n        easyrtc.setDataChannelOpenListener(this.openListener);\n        easyrtc.setDataChannelCloseListener(this.closeListener);        \n        easyrtc.connect(\"easyrtc.dataMessaging\", this.loginSuccess, this.loginFailure);\n    }\n    loginSuccess(easyrtcid) {\n        this.selfEasyrtcid = easyrtcid;\n        \n    }\n    \n    \n    loginFailure(errorCode, message) {\n        easyrtc.showError(errorCode, \"failure to login\");\n    }\n\n    openListener(otherParty) {\n        this.channelIsActive[otherParty] = true;\n        \n    }\n    \n    \n    closeListener(otherParty) {\n        this.channelIsActive[otherParty] = false;\n        \n    }\n\n\n    render(){\n        const {video} = this.state\n        return (\n            <div className='main-page'>\n\n                \n                Aperte em 'texto' para chat ou 'video' para conferencia\n                <div className='actions'>\n                    <button>Texto</button> \n                    &nbsp;\n                    &nbsp; \n                    <button disabled = {video === false} >Video</button>                 \n                </div>         \n            </div>\n            \n        )\n    }\n\n\n\n}"]},"metadata":{},"sourceType":"module"}